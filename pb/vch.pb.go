// Code generated by protoc-gen-go.
// source: vch.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	vch.proto

It has these top-level messages:
	Entity
	Intent
	NLPResponse
	TunnelRequest
	TunnelResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Entity struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Entity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Entity) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Intent struct {
	Type     string    `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Entities []*Entity `protobuf:"bytes,2,rep,name=entities" json:"entities,omitempty"`
}

func (m *Intent) Reset()                    { *m = Intent{} }
func (m *Intent) String() string            { return proto.CompactTextString(m) }
func (*Intent) ProtoMessage()               {}
func (*Intent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Intent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Intent) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type NLPResponse struct {
	Intents []*Intent `protobuf:"bytes,1,rep,name=intents" json:"intents,omitempty"`
}

func (m *NLPResponse) Reset()                    { *m = NLPResponse{} }
func (m *NLPResponse) String() string            { return proto.CompactTextString(m) }
func (*NLPResponse) ProtoMessage()               {}
func (*NLPResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NLPResponse) GetIntents() []*Intent {
	if m != nil {
		return m.Intents
	}
	return nil
}

type TunnelRequest struct {
}

func (m *TunnelRequest) Reset()                    { *m = TunnelRequest{} }
func (m *TunnelRequest) String() string            { return proto.CompactTextString(m) }
func (*TunnelRequest) ProtoMessage()               {}
func (*TunnelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type TunnelResponse struct {
	// Types that are valid to be assigned to Event:
	//	*TunnelResponse_Response
	Event isTunnelResponse_Event `protobuf_oneof:"event"`
}

func (m *TunnelResponse) Reset()                    { *m = TunnelResponse{} }
func (m *TunnelResponse) String() string            { return proto.CompactTextString(m) }
func (*TunnelResponse) ProtoMessage()               {}
func (*TunnelResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isTunnelResponse_Event interface {
	isTunnelResponse_Event()
}

type TunnelResponse_Response struct {
	Response *NLPResponse `protobuf:"bytes,1,opt,name=response,oneof"`
}

func (*TunnelResponse_Response) isTunnelResponse_Event() {}

func (m *TunnelResponse) GetEvent() isTunnelResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *TunnelResponse) GetResponse() *NLPResponse {
	if x, ok := m.GetEvent().(*TunnelResponse_Response); ok {
		return x.Response
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TunnelResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TunnelResponse_OneofMarshaler, _TunnelResponse_OneofUnmarshaler, _TunnelResponse_OneofSizer, []interface{}{
		(*TunnelResponse_Response)(nil),
	}
}

func _TunnelResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TunnelResponse)
	// event
	switch x := m.Event.(type) {
	case *TunnelResponse_Response:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TunnelResponse.Event has unexpected type %T", x)
	}
	return nil
}

func _TunnelResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TunnelResponse)
	switch tag {
	case 1: // event.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NLPResponse)
		err := b.DecodeMessage(msg)
		m.Event = &TunnelResponse_Response{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TunnelResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TunnelResponse)
	// event
	switch x := m.Event.(type) {
	case *TunnelResponse_Response:
		s := proto.Size(x.Response)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Entity)(nil), "pb.Entity")
	proto.RegisterType((*Intent)(nil), "pb.Intent")
	proto.RegisterType((*NLPResponse)(nil), "pb.NLPResponse")
	proto.RegisterType((*TunnelRequest)(nil), "pb.TunnelRequest")
	proto.RegisterType((*TunnelResponse)(nil), "pb.TunnelResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VCH service

type VCHClient interface {
	Tunnel(ctx context.Context, in *TunnelRequest, opts ...grpc.CallOption) (VCH_TunnelClient, error)
}

type vCHClient struct {
	cc *grpc.ClientConn
}

func NewVCHClient(cc *grpc.ClientConn) VCHClient {
	return &vCHClient{cc}
}

func (c *vCHClient) Tunnel(ctx context.Context, in *TunnelRequest, opts ...grpc.CallOption) (VCH_TunnelClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_VCH_serviceDesc.Streams[0], c.cc, "/pb.VCH/Tunnel", opts...)
	if err != nil {
		return nil, err
	}
	x := &vCHTunnelClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VCH_TunnelClient interface {
	Recv() (*TunnelResponse, error)
	grpc.ClientStream
}

type vCHTunnelClient struct {
	grpc.ClientStream
}

func (x *vCHTunnelClient) Recv() (*TunnelResponse, error) {
	m := new(TunnelResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for VCH service

type VCHServer interface {
	Tunnel(*TunnelRequest, VCH_TunnelServer) error
}

func RegisterVCHServer(s *grpc.Server, srv VCHServer) {
	s.RegisterService(&_VCH_serviceDesc, srv)
}

func _VCH_Tunnel_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TunnelRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VCHServer).Tunnel(m, &vCHTunnelServer{stream})
}

type VCH_TunnelServer interface {
	Send(*TunnelResponse) error
	grpc.ServerStream
}

type vCHTunnelServer struct {
	grpc.ServerStream
}

func (x *vCHTunnelServer) Send(m *TunnelResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _VCH_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.VCH",
	HandlerType: (*VCHServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Tunnel",
			Handler:       _VCH_Tunnel_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "vch.proto",
}

func init() { proto.RegisterFile("vch.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xd7, 0xce, 0x65, 0xdb, 0x2b, 0x3a, 0x7c, 0x78, 0x08, 0x9e, 0x46, 0x10, 0xd9, 0xc5,
	0x22, 0xe9, 0xcd, 0xa3, 0x3f, 0xa0, 0x82, 0x88, 0x04, 0xf1, 0x6e, 0xe5, 0x81, 0x85, 0x91, 0xc6,
	0xe5, 0xb5, 0xb0, 0xff, 0x5e, 0x9a, 0x6c, 0xb3, 0xc2, 0x6e, 0x2f, 0xdf, 0x97, 0xef, 0xe7, 0x13,
	0x02, 0xf3, 0xee, 0xeb, 0x3b, 0x77, 0x9b, 0x86, 0x1b, 0x4c, 0x5d, 0xa5, 0x34, 0x88, 0x27, 0xcb,
	0x35, 0x6f, 0x11, 0xe1, 0x84, 0xb7, 0x8e, 0x64, 0xb2, 0x4c, 0x56, 0x73, 0x13, 0x66, 0xbc, 0x80,
	0x49, 0xf7, 0xb9, 0x6e, 0x49, 0xa6, 0x21, 0x8c, 0x07, 0xf5, 0x08, 0xe2, 0xd9, 0x32, 0x59, 0x3e,
	0xda, 0xb9, 0x86, 0x19, 0xf5, 0xc4, 0x9a, 0xbc, 0x4c, 0x97, 0xe3, 0x55, 0xa6, 0x21, 0x77, 0x55,
	0x1e, 0x2d, 0xe6, 0xb0, 0x53, 0x05, 0x64, 0xaf, 0x2f, 0x6f, 0x86, 0xbc, 0x6b, 0xac, 0x27, 0xbc,
	0x82, 0x69, 0x1d, 0xa0, 0x5e, 0x26, 0x7f, 0xad, 0xe8, 0x31, 0xfb, 0x95, 0x5a, 0xc0, 0xe9, 0x7b,
	0x6b, 0x2d, 0xad, 0x0d, 0xfd, 0xb4, 0xe4, 0x59, 0x95, 0x70, 0xb6, 0x0f, 0x76, 0xa0, 0x1b, 0x98,
	0x6d, 0x76, 0x73, 0x78, 0x57, 0xa6, 0x17, 0x3d, 0x69, 0xe0, 0x2a, 0x47, 0xe6, 0x70, 0xe5, 0x7e,
	0x0a, 0x13, 0xea, 0xc8, 0xb2, 0xbe, 0x83, 0xf1, 0xc7, 0x43, 0x89, 0x05, 0x88, 0x08, 0xc4, 0xf3,
	0xbe, 0xf6, 0xcf, 0x76, 0x89, 0xc3, 0x28, 0x02, 0xd4, 0xe8, 0x36, 0xa9, 0x44, 0xf8, 0xd0, 0xe2,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x08, 0x07, 0x44, 0xb0, 0x5d, 0x01, 0x00, 0x00,
}
